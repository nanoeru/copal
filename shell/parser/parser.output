
state 0
	$accept: .stmts $end 
	stmts: .    (1)
	idents: .    (28)

	$end  reduce 1 (src line 79)
	IDENT  shift 21
	NUMBER  shift 16
	STRING  shift 24
	EOF  shift 13
	FUNC  shift 9
	RETURN  shift 10
	IF  shift 7
	NIL  shift 18
	FOR  shift 8
	TRUE  shift 17
	FALSE  shift 19
	GO  shift 11
	COMMENT  shift 12
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	;  shift 14
	\n  shift 15
	$  shift 20
	.  reduce 28 (src line 268)

	stmts  goto 1
	stmt  goto 2
	pre_stmt  goto 3
	stmt_delimiter  goto 4
	expr  goto 5
	idents  goto 6

state 1
	$accept:  stmts.$end 

	$end  accept
	.  error


state 2
	stmts:  stmt.stmts 
	stmts: .    (1)
	idents: .    (28)

	$end  reduce 1 (src line 79)
	IDENT  shift 21
	NUMBER  shift 16
	STRING  shift 24
	EOF  shift 13
	FUNC  shift 9
	RETURN  shift 10
	IF  shift 7
	NIL  shift 18
	FOR  shift 8
	TRUE  shift 17
	FALSE  shift 19
	GO  shift 11
	COMMENT  shift 12
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	}  reduce 1 (src line 79)
	;  shift 14
	\n  shift 15
	$  shift 20
	.  reduce 28 (src line 268)

	stmts  goto 29
	stmt  goto 2
	pre_stmt  goto 3
	stmt_delimiter  goto 4
	expr  goto 5
	idents  goto 6

state 3
	stmt:  pre_stmt.stmt_delimiter 

	EOF  shift 13
	COMMENT  shift 12
	;  shift 14
	\n  shift 15
	.  error

	stmt_delimiter  goto 30

state 4
	stmt:  stmt_delimiter.    (4)

	.  reduce 4 (src line 99)


state 5
	pre_stmt:  expr.    (6)
	pre_stmt:  expr.CHAN expr 
	pre_stmt:  expr.INC 
	pre_stmt:  expr.DEC 
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	INC  shift 32
	DEC  shift 33
	XOR  shift 52
	CHAN  shift 31
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 6 (src line 112)


state 6
	pre_stmt:  idents.= exprs 
	pre_stmt:  idents.NEW_ASSIGN exprs 
	idents:  idents., IDENT 

	NEW_ASSIGN  shift 57
	=  shift 56
	,  shift 58
	.  error


state 7
	pre_stmt:  IF.pre_stmt ; expr block 
	pre_stmt:  IF.expr block 
	pre_stmt:  IF.pre_stmt ; expr block ELSE block 
	pre_stmt:  IF.expr block ELSE block 
	idents: .    (28)

	IDENT  shift 21
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 9
	RETURN  shift 10
	IF  shift 7
	NIL  shift 18
	FOR  shift 8
	TRUE  shift 17
	FALSE  shift 19
	GO  shift 11
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  reduce 28 (src line 268)

	pre_stmt  goto 59
	expr  goto 60
	idents  goto 6

state 8
	pre_stmt:  FOR.block 
	pre_stmt:  FOR.expr block 
	pre_stmt:  FOR.pre_stmt ; expr ; pre_stmt block 
	pre_stmt:  FOR.idents NEW_ASSIGN RANGE expr block 
	idents: .    (28)

	IDENT  shift 21
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 9
	RETURN  shift 10
	IF  shift 7
	NIL  shift 18
	FOR  shift 8
	TRUE  shift 17
	FALSE  shift 19
	GO  shift 11
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	{  shift 65
	$  shift 20
	.  reduce 28 (src line 268)

	block  goto 61
	pre_stmt  goto 63
	expr  goto 62
	idents  goto 64

state 9
	pre_stmt:  FUNC.IDENT ( idents ) block 
	pre_stmt:  FUNC.IDENT ( idents ) ( idents ) block 
	expr:  FUNC.( idents ) block 
	expr:  FUNC.( idents ) ( idents ) block 

	IDENT  shift 66
	(  shift 67
	.  error


state 10
	pre_stmt:  RETURN.exprs 
	exprs: .    (31)

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  reduce 31 (src line 282)

	expr  goto 69
	exprs  goto 68

state 11
	pre_stmt:  GO.expr ( exprs ) 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 72

state 12
	stmt_delimiter:  COMMENT.    (24)

	.  reduce 24 (src line 218)


state 13
	stmt_delimiter:  EOF.    (25)

	.  reduce 25 (src line 223)


state 14
	stmt_delimiter:  ;.    (26)

	.  reduce 26 (src line 227)


state 15
	stmt_delimiter:  \n.    (27)

	.  reduce 27 (src line 231)


state 16
	expr:  NUMBER.    (34)

	.  reduce 34 (src line 305)


state 17
	expr:  TRUE.    (35)

	.  reduce 35 (src line 310)


state 18
	expr:  NIL.    (36)

	.  reduce 36 (src line 315)


state 19
	expr:  FALSE.    (37)

	.  reduce 37 (src line 320)


state 20
	expr:  $.IDENT 

	IDENT  shift 73
	.  error


state 21
	idents:  IDENT.    (29)
	expr:  IDENT.    (39)

	NEW_ASSIGN  reduce 29 (src line 272)
	=  reduce 29 (src line 272)
	,  reduce 29 (src line 272)
	.  reduce 39 (src line 329)


state 22
	expr:  [.] { exprs } 

	]  shift 74
	.  error


state 23
	expr:  -.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 75

state 24
	expr:  STRING.    (47)

	.  reduce 47 (src line 366)


state 25
	expr:  (.expr ) 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 76

state 26
	expr:  !.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 77

state 27
	expr:  ~.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 78

state 28
	expr:  CHAN.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 79

state 29
	stmts:  stmt stmts.    (2)

	.  reduce 2 (src line 86)


state 30
	stmt:  pre_stmt stmt_delimiter.    (3)

	.  reduce 3 (src line 94)


state 31
	pre_stmt:  expr CHAN.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 80

state 32
	pre_stmt:  expr INC.    (10)

	.  reduce 10 (src line 151)


state 33
	pre_stmt:  expr DEC.    (11)

	.  reduce 11 (src line 156)


state 34
	expr:  expr ..IDENT 

	IDENT  shift 81
	.  error


state 35
	expr:  expr [.expr ] 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 82

state 36
	expr:  expr (.exprs ) 
	exprs: .    (31)

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  reduce 31 (src line 282)

	expr  goto 69
	exprs  goto 83

state 37
	expr:  expr +.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 84

state 38
	expr:  expr -.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 85

state 39
	expr:  expr *.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 86

state 40
	expr:  expr /.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 87

state 41
	expr:  expr %.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 88

state 42
	expr:  expr <.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 89

state 43
	expr:  expr >.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 90

state 44
	expr:  expr LE.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 91

state 45
	expr:  expr GE.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 92

state 46
	expr:  expr EQ.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 93

state 47
	expr:  expr NE.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 94

state 48
	expr:  expr SHL.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 95

state 49
	expr:  expr SHR.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 96

state 50
	expr:  expr AND.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 97

state 51
	expr:  expr OR.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 98

state 52
	expr:  expr XOR.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 99

state 53
	expr:  expr &.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 100

state 54
	expr:  expr |.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 101

state 55
	expr:  expr ^.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 102

state 56
	pre_stmt:  idents =.exprs 
	exprs: .    (31)

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  reduce 31 (src line 282)

	expr  goto 69
	exprs  goto 103

state 57
	pre_stmt:  idents NEW_ASSIGN.exprs 
	exprs: .    (31)

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  reduce 31 (src line 282)

	expr  goto 69
	exprs  goto 104

state 58
	idents:  idents ,.IDENT 

	IDENT  shift 105
	.  error


state 59
	pre_stmt:  IF pre_stmt.; expr block 
	pre_stmt:  IF pre_stmt.; expr block ELSE block 

	;  shift 106
	.  error


state 60
	pre_stmt:  expr.    (6)
	pre_stmt:  expr.CHAN expr 
	pre_stmt:  expr.INC 
	pre_stmt:  expr.DEC 
	pre_stmt:  IF expr.block 
	pre_stmt:  IF expr.block ELSE block 
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	INC  shift 32
	DEC  shift 33
	XOR  shift 52
	CHAN  shift 31
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	{  shift 65
	.  reduce 6 (src line 112)

	block  goto 107

state 61
	pre_stmt:  FOR block.    (16)

	.  reduce 16 (src line 181)


state 62
	pre_stmt:  expr.    (6)
	pre_stmt:  expr.CHAN expr 
	pre_stmt:  expr.INC 
	pre_stmt:  expr.DEC 
	pre_stmt:  FOR expr.block 
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	INC  shift 32
	DEC  shift 33
	XOR  shift 52
	CHAN  shift 31
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	{  shift 65
	.  reduce 6 (src line 112)

	block  goto 108

state 63
	pre_stmt:  FOR pre_stmt.; expr ; pre_stmt block 

	;  shift 109
	.  error


state 64
	pre_stmt:  idents.= exprs 
	pre_stmt:  idents.NEW_ASSIGN exprs 
	pre_stmt:  FOR idents.NEW_ASSIGN RANGE expr block 
	idents:  idents., IDENT 

	NEW_ASSIGN  shift 110
	=  shift 56
	,  shift 58
	.  error


state 65
	block:  {.stmts } 
	stmts: .    (1)
	idents: .    (28)

	IDENT  shift 21
	NUMBER  shift 16
	STRING  shift 24
	EOF  shift 13
	FUNC  shift 9
	RETURN  shift 10
	IF  shift 7
	NIL  shift 18
	FOR  shift 8
	TRUE  shift 17
	FALSE  shift 19
	GO  shift 11
	COMMENT  shift 12
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	}  reduce 1 (src line 79)
	;  shift 14
	\n  shift 15
	$  shift 20
	.  reduce 28 (src line 268)

	stmts  goto 111
	stmt  goto 2
	pre_stmt  goto 3
	stmt_delimiter  goto 4
	expr  goto 5
	idents  goto 6

state 66
	pre_stmt:  FUNC IDENT.( idents ) block 
	pre_stmt:  FUNC IDENT.( idents ) ( idents ) block 

	(  shift 112
	.  error


state 67
	expr:  FUNC (.idents ) block 
	expr:  FUNC (.idents ) ( idents ) block 
	idents: .    (28)

	IDENT  shift 114
	.  reduce 28 (src line 268)

	idents  goto 113

state 68
	pre_stmt:  RETURN exprs.    (22)
	exprs:  exprs., expr 

	,  shift 115
	.  reduce 22 (src line 207)


state 69
	exprs:  expr.    (32)
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	XOR  shift 52
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 32 (src line 286)


state 70
	expr:  IDENT.    (39)

	.  reduce 39 (src line 329)


state 71
	expr:  FUNC.( idents ) block 
	expr:  FUNC.( idents ) ( idents ) block 

	(  shift 67
	.  error


state 72
	pre_stmt:  GO expr.( exprs ) 
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	XOR  shift 52
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 116
	.  shift 34
	.  error


state 73
	expr:  $ IDENT.    (38)

	.  reduce 38 (src line 324)


state 74
	expr:  [ ].{ exprs } 

	{  shift 117
	.  error


state 75
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  - expr.    (46)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 46 (src line 362)


state 76
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  ( expr.) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	XOR  shift 52
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	)  shift 118
	.  shift 34
	.  error


state 77
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 
	expr:  ! expr.    (68)

	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 68 (src line 453)


state 78
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 
	expr:  ~ expr.    (69)

	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 69 (src line 457)


state 79
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 
	expr:  CHAN expr.    (70)

	XOR  shift 52
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 70 (src line 461)


state 80
	pre_stmt:  expr CHAN expr.    (9)
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	XOR  shift 52
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 9 (src line 131)


state 81
	expr:  expr . IDENT.    (40)

	.  reduce 40 (src line 334)


state 82
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr [ expr.] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	XOR  shift 52
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	]  shift 119
	(  shift 36
	.  shift 34
	.  error


state 83
	exprs:  exprs., expr 
	expr:  expr ( exprs.) 

	)  shift 120
	,  shift 115
	.  error


state 84
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr + expr.    (49)
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 49 (src line 377)


state 85
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr - expr.    (50)
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 50 (src line 381)


state 86
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr * expr.    (51)
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 51 (src line 385)


state 87
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr / expr.    (52)
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 52 (src line 389)


state 88
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr % expr.    (53)
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 53 (src line 393)


state 89
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr < expr.    (54)
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 54 (src line 397)


state 90
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr > expr.    (55)
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 55 (src line 401)


state 91
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (56)
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 56 (src line 405)


state 92
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (57)
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 57 (src line 409)


state 93
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (58)
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 58 (src line 413)


state 94
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr NE expr.    (59)
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 59 (src line 417)


state 95
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr SHL expr.    (60)
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 60 (src line 421)


state 96
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr SHR expr.    (61)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 61 (src line 425)


state 97
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (62)
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 62 (src line 429)


state 98
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (63)
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 63 (src line 433)


state 99
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr XOR expr.    (64)
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 64 (src line 437)


state 100
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr & expr.    (65)
	expr:  expr.| expr 
	expr:  expr.^ expr 

	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 65 (src line 441)


state 101
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr | expr.    (66)
	expr:  expr.^ expr 

	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 66 (src line 445)


state 102
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 
	expr:  expr ^ expr.    (67)

	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 67 (src line 449)


state 103
	pre_stmt:  idents = exprs.    (7)
	exprs:  exprs., expr 

	,  shift 115
	.  reduce 7 (src line 120)


state 104
	pre_stmt:  idents NEW_ASSIGN exprs.    (8)
	exprs:  exprs., expr 

	,  shift 115
	.  reduce 8 (src line 125)


state 105
	idents:  idents , IDENT.    (30)

	.  reduce 30 (src line 276)


state 106
	pre_stmt:  IF pre_stmt ;.expr block 
	pre_stmt:  IF pre_stmt ;.expr block ELSE block 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 121

state 107
	pre_stmt:  IF expr block.    (13)
	pre_stmt:  IF expr block.ELSE block 

	ELSE  shift 122
	.  reduce 13 (src line 166)


state 108
	pre_stmt:  FOR expr block.    (17)

	.  reduce 17 (src line 186)


state 109
	pre_stmt:  FOR pre_stmt ;.expr ; pre_stmt block 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 123

state 110
	pre_stmt:  idents NEW_ASSIGN.exprs 
	pre_stmt:  FOR idents NEW_ASSIGN.RANGE expr block 
	exprs: .    (31)

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	RANGE  shift 124
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  reduce 31 (src line 282)

	expr  goto 69
	exprs  goto 104

state 111
	block:  { stmts.} 

	}  shift 125
	.  error


state 112
	pre_stmt:  FUNC IDENT (.idents ) block 
	pre_stmt:  FUNC IDENT (.idents ) ( idents ) block 
	idents: .    (28)

	IDENT  shift 114
	.  reduce 28 (src line 268)

	idents  goto 126

state 113
	idents:  idents., IDENT 
	expr:  FUNC ( idents.) block 
	expr:  FUNC ( idents.) ( idents ) block 

	)  shift 127
	,  shift 58
	.  error


state 114
	idents:  IDENT.    (29)

	.  reduce 29 (src line 272)


state 115
	exprs:  exprs ,.expr 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 128

state 116
	pre_stmt:  GO expr (.exprs ) 
	expr:  expr (.exprs ) 
	exprs: .    (31)

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  reduce 31 (src line 282)

	expr  goto 69
	exprs  goto 129

state 117
	expr:  [ ] {.exprs } 
	exprs: .    (31)

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  reduce 31 (src line 282)

	expr  goto 69
	exprs  goto 130

state 118
	expr:  ( expr ).    (48)

	.  reduce 48 (src line 370)


state 119
	expr:  expr [ expr ].    (41)

	.  reduce 41 (src line 338)


state 120
	expr:  expr ( exprs ).    (42)

	.  reduce 42 (src line 343)


state 121
	pre_stmt:  IF pre_stmt ; expr.block 
	pre_stmt:  IF pre_stmt ; expr.block ELSE block 
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	XOR  shift 52
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	{  shift 65
	.  error

	block  goto 131

state 122
	pre_stmt:  IF expr block ELSE.block 

	{  shift 65
	.  error

	block  goto 132

state 123
	pre_stmt:  FOR pre_stmt ; expr.; pre_stmt block 
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	XOR  shift 52
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	;  shift 133
	.  error


state 124
	pre_stmt:  FOR idents NEW_ASSIGN RANGE.expr block 

	IDENT  shift 70
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 71
	NIL  shift 18
	TRUE  shift 17
	FALSE  shift 19
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  error

	expr  goto 134

state 125
	block:  { stmts }.    (5)

	.  reduce 5 (src line 105)


state 126
	pre_stmt:  FUNC IDENT ( idents.) block 
	pre_stmt:  FUNC IDENT ( idents.) ( idents ) block 
	idents:  idents., IDENT 

	)  shift 135
	,  shift 58
	.  error


state 127
	expr:  FUNC ( idents ).block 
	expr:  FUNC ( idents ).( idents ) block 

	(  shift 137
	{  shift 65
	.  error

	block  goto 136

state 128
	exprs:  exprs , expr.    (33)
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	XOR  shift 52
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	.  reduce 33 (src line 290)


state 129
	pre_stmt:  GO expr ( exprs.) 
	exprs:  exprs., expr 
	expr:  expr ( exprs.) 

	)  shift 138
	,  shift 115
	.  error


state 130
	exprs:  exprs., expr 
	expr:  [ ] { exprs.} 

	}  shift 139
	,  shift 115
	.  error


state 131
	pre_stmt:  IF pre_stmt ; expr block.    (12)
	pre_stmt:  IF pre_stmt ; expr block.ELSE block 

	ELSE  shift 140
	.  reduce 12 (src line 161)


state 132
	pre_stmt:  IF expr block ELSE block.    (15)

	.  reduce 15 (src line 176)


state 133
	pre_stmt:  FOR pre_stmt ; expr ;.pre_stmt block 
	idents: .    (28)

	IDENT  shift 21
	NUMBER  shift 16
	STRING  shift 24
	FUNC  shift 9
	RETURN  shift 10
	IF  shift 7
	NIL  shift 18
	FOR  shift 8
	TRUE  shift 17
	FALSE  shift 19
	GO  shift 11
	CHAN  shift 28
	-  shift 23
	!  shift 26
	~  shift 27
	[  shift 22
	(  shift 25
	$  shift 20
	.  reduce 28 (src line 268)

	pre_stmt  goto 141
	expr  goto 5
	idents  goto 6

state 134
	pre_stmt:  FOR idents NEW_ASSIGN RANGE expr.block 
	expr:  expr.. IDENT 
	expr:  expr.[ expr ] 
	expr:  expr.( exprs ) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.LE expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.^ expr 

	XOR  shift 52
	OR  shift 51
	AND  shift 50
	|  shift 54
	&  shift 53
	^  shift 55
	<  shift 42
	>  shift 43
	LE  shift 44
	GE  shift 45
	NE  shift 47
	EQ  shift 46
	+  shift 37
	-  shift 38
	*  shift 39
	/  shift 40
	%  shift 41
	SHR  shift 49
	SHL  shift 48
	[  shift 35
	(  shift 36
	.  shift 34
	{  shift 65
	.  error

	block  goto 142

state 135
	pre_stmt:  FUNC IDENT ( idents ).block 
	pre_stmt:  FUNC IDENT ( idents ).( idents ) block 

	(  shift 144
	{  shift 65
	.  error

	block  goto 143

state 136
	expr:  FUNC ( idents ) block.    (44)

	.  reduce 44 (src line 353)


state 137
	expr:  FUNC ( idents ) (.idents ) block 
	idents: .    (28)

	IDENT  shift 114
	.  reduce 28 (src line 268)

	idents  goto 145

state 138
	pre_stmt:  GO expr ( exprs ).    (23)
	expr:  expr ( exprs ).    (42)

	EOF  reduce 23 (src line 212)
	COMMENT  reduce 23 (src line 212)
	{  reduce 23 (src line 212)
	;  reduce 23 (src line 212)
	\n  reduce 23 (src line 212)
	.  reduce 42 (src line 343)


state 139
	expr:  [ ] { exprs }.    (43)

	.  reduce 43 (src line 348)


state 140
	pre_stmt:  IF pre_stmt ; expr block ELSE.block 

	{  shift 65
	.  error

	block  goto 146

state 141
	pre_stmt:  FOR pre_stmt ; expr ; pre_stmt.block 

	{  shift 65
	.  error

	block  goto 147

state 142
	pre_stmt:  FOR idents NEW_ASSIGN RANGE expr block.    (19)

	.  reduce 19 (src line 195)


state 143
	pre_stmt:  FUNC IDENT ( idents ) block.    (20)

	.  reduce 20 (src line 199)


state 144
	pre_stmt:  FUNC IDENT ( idents ) (.idents ) block 
	idents: .    (28)

	IDENT  shift 114
	.  reduce 28 (src line 268)

	idents  goto 148

state 145
	idents:  idents., IDENT 
	expr:  FUNC ( idents ) ( idents.) block 

	)  shift 149
	,  shift 58
	.  error


state 146
	pre_stmt:  IF pre_stmt ; expr block ELSE block.    (14)

	.  reduce 14 (src line 171)


state 147
	pre_stmt:  FOR pre_stmt ; expr ; pre_stmt block.    (18)

	.  reduce 18 (src line 191)


state 148
	pre_stmt:  FUNC IDENT ( idents ) ( idents.) block 
	idents:  idents., IDENT 

	)  shift 150
	,  shift 58
	.  error


state 149
	expr:  FUNC ( idents ) ( idents ).block 

	{  shift 65
	.  error

	block  goto 151

state 150
	pre_stmt:  FUNC IDENT ( idents ) ( idents ).block 

	{  shift 65
	.  error

	block  goto 152

state 151
	expr:  FUNC ( idents ) ( idents ) block.    (45)

	.  reduce 45 (src line 358)


state 152
	pre_stmt:  FUNC IDENT ( idents ) ( idents ) block.    (21)

	.  reduce 21 (src line 203)


69 terminals, 9 nonterminals
71 grammar rules, 153/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
108 working sets used
memory: parser 86/30000
209 extra closures
1223 shift entries, 13 exceptions
72 goto entries
17 entries saved by goto default
Optimizer space used: output 681/30000
681 table entries, 208 zero
maximum spread: 69, maximum offset: 150
